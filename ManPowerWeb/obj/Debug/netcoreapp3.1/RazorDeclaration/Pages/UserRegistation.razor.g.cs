// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace ManPowerWeb.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "E:\Industry Bv Projects\Man Power 2\ManPowerWeb\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\Industry Bv Projects\Man Power 2\ManPowerWeb\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\Industry Bv Projects\Man Power 2\ManPowerWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\Industry Bv Projects\Man Power 2\ManPowerWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\Industry Bv Projects\Man Power 2\ManPowerWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\Industry Bv Projects\Man Power 2\ManPowerWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "E:\Industry Bv Projects\Man Power 2\ManPowerWeb\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "E:\Industry Bv Projects\Man Power 2\ManPowerWeb\_Imports.razor"
using ManPowerWeb;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "E:\Industry Bv Projects\Man Power 2\ManPowerWeb\_Imports.razor"
using ManPowerWeb.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "E:\Industry Bv Projects\Man Power 2\ManPowerWeb\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "E:\Industry Bv Projects\Man Power 2\ManPowerWeb\_Imports.razor"
using CurrieTechnologies.Razor.SweetAlert2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "E:\Industry Bv Projects\Man Power 2\ManPowerWeb\Pages\UserRegistation.razor"
using ManPowerCore.Common;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "E:\Industry Bv Projects\Man Power 2\ManPowerWeb\Pages\UserRegistation.razor"
using ManPowerCore.Controller;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "E:\Industry Bv Projects\Man Power 2\ManPowerWeb\Pages\UserRegistation.razor"
using ManPowerCore.Domain;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "E:\Industry Bv Projects\Man Power 2\ManPowerWeb\Pages\UserRegistation.razor"
using System.Text.RegularExpressions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "E:\Industry Bv Projects\Man Power 2\ManPowerWeb\Pages\UserRegistation.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "E:\Industry Bv Projects\Man Power 2\ManPowerWeb\Pages\UserRegistation.razor"
using System.Text.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "E:\Industry Bv Projects\Man Power 2\ManPowerWeb\Pages\UserRegistation.razor"
using ManPowerWeb.Model;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/UserRegister")]
    public partial class UserRegistation : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 241 "E:\Industry Bv Projects\Man Power 2\ManPowerWeb\Pages\UserRegistation.razor"
       



    class Model
    {
        public string empNumber { get; set; } = "";
        public int designation { get; set; } 
        public DateTime date { get; set; } = DateTime.Now;
        public string name { get; set; } = "";
        public string contactNumber { get; set; } = "";
        public string email { get; set; } = "";
        public string userName { get; set; } = "";
        public string pw1 { get; set; } = "";
        public int position { get; set; } 
        public int department { get; set; }
        public int userType { get; set; } 


    }

    Model model = new Model();
    public string pw2 = "";


    public void onClick_clear()
    {
        model.name = "";
        model.email = "";
        model.contactNumber = "";
        model.userName = "";
        model.designation = 0;
        model.pw1 = "";
        pw2 = "";
        model.position = 0;
        model.empNumber = "";
        model.userType = 0;
        model.department = 0;

    }


    //------------------ validator ----------------------//

    bool popup;


    List<SystemUser> ValidateUser = new List<SystemUser>();

    List<UserType> UserTypelist = new List<UserType>();
    List<Designation> DesignationList = new List<Designation>();
    List<Possitions> PositionList = new List<Possitions>();
    // List<DepartmentUnitPositions> PositionList = new List<DepartmentUnitPositions>();
    List<DepartmentUnitType> DipartmentList = new List<DepartmentUnitType>();
    List<DepartmentUnit> listDistrict = new List<DepartmentUnit>();
    List<DepartmentUnit> listDSDivision = new List<DepartmentUnit>();
    List<DepartmentUnit> DepLIst = new List<DepartmentUnit>();



    protected override void OnInitialized()
    {

        UserTypeController userTypeController = ControllerFactory.CreateUserTypeController();
        UserTypelist = userTypeController.GetAllUserType(false);

        DesignationController designationController = ControllerFactory.CreateDesignationController();
        DesignationList = designationController.GetAllDesignation(false,false);

        //DepartmentUnitPositionsController departmentUnitPositionsController = ControllerFactory.CreateDepartmentUnitPositionsController();
        //PositionList = departmentUnitPositionsController.GetAllDepartmentUnitPositions(false, false, false, true, false);

        PossitionsController possitionsController = ControllerFactory.CreatePossitionsController();
        PositionList = possitionsController.GetAllPossitions(false);

        DepartmentUnitTypeController departmentUnitTypeController = ControllerFactory.CreateDepartmentUnitTypeController();
        DipartmentList = departmentUnitTypeController.GetAllDepartmentUnitType(false);


        DepartmentUnitController departmentUnitController = ControllerFactory.CreateDepartmentUnitController();
        DepLIst = departmentUnitController.GetAllDepartmentUnit(false,false);

        DepartmentUnitTypeController _DepartmentUnitTypeController = ControllerFactory.CreateDepartmentUnitTypeController();
        listDistrict = _DepartmentUnitTypeController.GetDepartmentUnitType(2, true)._DepartmentUnit;
        listDSDivision = _DepartmentUnitTypeController.GetDepartmentUnitType(3, true)._DepartmentUnit;


    }

    int DSDivision;
    int District;
    int ParentId;
    int headOffice;

    void OnSubmit(Model model)
    {
        Console.WriteLine($"Submit: {JsonSerializer.Serialize(model, new JsonSerializerOptions() { WriteIndented = true })}");




        SystemUserController systemUserController2 = ControllerFactory.CreateSystemUserController();
        ValidateUser = systemUserController2.GetAllSystemUser(model.userName, model.email, int.Parse(model.empNumber), int.Parse(model.contactNumber));



        if (ValidateUser.Count == 0)
        {


            SystemUser systemUser = new SystemUser();
            SystemUserController systemUserController = ControllerFactory.CreateSystemUserController();


            systemUser.SystemUserId = 1;
            systemUser.DesignationId = model.designation;
            systemUser.UserTypeId = model.userType;
            systemUser.EmpNumber = int.Parse(model.empNumber);
            systemUser.Name = model.name;
            systemUser.ContactNumber = int.Parse(model.contactNumber);
            systemUser.Email = model.email;
            systemUser.UserName = model.userName;
            systemUser.UserPwd = model.pw1;
            systemUser.CreatedDate = DateTime.Today;



            int SUID =  systemUserController.SaveSystemUser(systemUser);


            DepartmentUnitPositions departmentUnitPositions = new DepartmentUnitPositions();
            DepartmentUnitPositionsController departmentUnitPositionsController = ControllerFactory.CreateDepartmentUnitPositionsController();

            departmentUnitPositions.SystemUserId = SUID;
            departmentUnitPositions.PossitionsId = model.position;

            if (model.department == 1)
            {
                departmentUnitPositions.DepartmentUnitId = headOffice;
            }

            if (model.department == 2)
            {
                departmentUnitPositions.DepartmentUnitId = District;
            }
            else if (model.department == 3)
            {
                departmentUnitPositions.DepartmentUnitId = DSDivision;

            }
            departmentUnitPositions.ParentId = ParentId;

            departmentUnitPositionsController.SaveDepartmentUnitPositions(departmentUnitPositions);


            JSRuntime.InvokeAsync<object>("ErrorAlert", "success", "", "Added success");

            onClick_clear();

        }
        else
        {

            JSRuntime.InvokeAsync<object>("ErrorAlert", "Error", "", "This Account is Already Exist ");

        }



    }

    List<Designation> desigList = new List<Designation>();

    void OnInvalidSubmit(FormInvalidSubmitEventArgs args)
    {
        Console.WriteLine($"InvalidSubmit: {JsonSerializer.Serialize(args, new JsonSerializerOptions() { WriteIndented = true })}");

    

    
    }









    //-------------- Date Picker hander --------------------//



    IEnumerable<DateTime> dates = new DateTime[] { DateTime.Today.AddDays(-1), DateTime.Today.AddDays(1) };

    void OnChange(DateTime? value, string name, string format)
    {
    }

    void DateRenderSpecial(DateRenderEventArgs args)
    {
        if (dates.Contains(args.Date))
        {
            args.Attributes.Add("style", "background-color: #ff6d41; border-color: white;");
        }
    }

    void DateRender(DateRenderEventArgs args)
    {
        args.Disabled = args.Disabled || dates.Contains(args.Date);
    }

    void DateRenderNoWeekends(DateRenderEventArgs args)
    {
        args.Disabled = args.Disabled || args.Date.DayOfWeek == DayOfWeek.Sunday || args.Date.DayOfWeek == DayOfWeek.Saturday;
    }

    void OnTodayClick()
    {
        model.date = DateTime.Now;
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
    }
}
#pragma warning restore 1591

@page "/planning/annualTargets"
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject TooltipService tooltipService


<div id="main">
        <RadzenCard Style="padding-left:45px;">
        <div class="wizard-heading">Annual Targets</div>
        <div class="row">
                <div class="col-6">
                    <div class="row">
                        <div class="col-4">
                            <RadzenLabel Text="Year" />
                        </div>
                        <div class="col-7">
                            <RadzenDropDown AllowClear="true" TValue="string" Class="w-100" Placeholder="" Data="@year" Name="year"
                                    SelectedItem="selectedYear" @bind-Value="selectedYear" Style="margin-bottom:10px;font-size:0.9em;" /><br />
                            <RadzenRequiredValidator Component="year" Text="Year is required" Style="position: absolute" />
                        </div>
                    </div><br />
                </div>

                <div class="col-6">
                    <div class="row">
                        <div class="col-4">
                            <RadzenLabel Text="Month" />
                        </div>
                        <div class="col-7">
                            <RadzenDropDown AllowClear="true" TValue="int" Class="w-100" Placeholder="" Data="@monthTable" Name="Month"
                                        ValueProperty="monthNumber" TextProperty="monthName" @bind-Value="month" Style="margin-bottom:10px;font-size:0.9em;" />
                            <RadzenRequiredValidator Component="Month" Text="Month is required" Style="position: absolute" />
                        </div>
                    </div>
                    <br />
                </div>

            @*------------ filter ------------*@

            <div class="row">
                <div class="col-6">

                    <div class="row">
                        <div class="col-4">
                            <RadzenLabel Text="District" />
                        </div>
                        <div class="col-7">
                            <RadzenDropDown AllowClear="true" TValue="int" Class="w-100" Placeholder="" Style="margin-bottom:10px;font-size:0.9em;" Name="District"
                                            Data="@listDistrict" ValueProperty="DepartmentUnitId" TextProperty="Name" @bind-Value="selectedDistrict" Disabled />
                            <RadzenRequiredValidator Component="District" Text="District is required" Style="position: absolute" />
                        </div>
                    </div>
                    <br />

                    <div class="row">
                        <div class="col-4">
                            <RadzenLabel Text="Designation" />
                        </div>
                        <div class="col-7">
                            <RadzenDropDown AllowClear="true" TValue="int" Class="w-100" Placeholder="" Data="@listDesignation" Style="margin-bottom:10px;font-size:0.9em;"
                                        ValueProperty="DesignationId" TextProperty="DesigntionName" @bind-Value="selectedDesignation" Name="Designation" Disabled />
                            <RadzenRequiredValidator Component="Designation" Text="Designation is required" Style="position: absolute" />
                        </div>
                    </div>
                    <br />
                    
                </div>

                @*----------------------------*@
                <div class="col-6">

                    <div class="row">
                        <div class="col-4">
                            <RadzenLabel Text="DS Division" />
                        </div>
                        <div class="col-7">
                            <RadzenDropDown AllowClear="true" TValue="int" Class="w-100" Placeholder="" Style="margin-bottom:10px;font-size:0.9em;" Name="Division"
                                        Data="@listDSDivision.Where(u => u.ParentId == selectedDistrict)" ValueProperty="DepartmentUnitId" TextProperty="Name" @bind-Value="selectedDSDivision" Disabled />
                            <RadzenRequiredValidator Component="Division" Text="Division is required" Style="position: absolute" />
                        </div>
                    </div>
                    <br />

                    <div class="row">
                        <div class="col-4">
                            <RadzenLabel Text="Officer Name" />
                        </div>
                        <div class="col-7">
                            <RadzenDropDown AllowClear="true" TValue="string" Class="w-100" Data="@listDesignation.Where(u => u.DesignationId == selectedDesignation)"
                                        ValueProperty="UserTypeId" TextProperty="Name" @bind-Value="selectedOfficer" Placeholder="" Disabled /><br /> <br />
                            <RadzenRequiredValidator Component="Officer" Text="OfficerName is required" Style="position: absolute" />
                        </div>
                    </div>
                    <br />

                </div>
            </div>
        </div>
            <RadzenButton Shade="Shade.Darker" Text="Search" ButtonStyle="ButtonStyle.Secondary" ButtonType="ButtonType.Submit" Style="width:130px;" Click="() => onClick_Search(int.Parse(selectedYear), month)" />
        <br/><br/>

            <a href="/planning/1/addnewtarget">
                <RadzenButton Shade="Shade.Darker" Text="Add New Target" ButtonStyle="ButtonStyle.Secondary" ButtonType="ButtonType.Submit" Style="width:200px;" />
            </a>

            <br /><br/><br/>

        @if (programTargetsList.Count != 0) 
            {
                <RadzenDataGrid Style="width: 900px" AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                        Data="@programTargetsList" TItem="ProgramTarget" ColumnWidth="400px" LogicalFilterOperator="LogicalFilterOperator.Or">    
                    <Columns>
                
                    <RadzenDataGridColumn TItem="ProgramTarget" Property="ProgramTargetId" Title="ID" Width="80px" TextAlign="TextAlign.Center" />
                    <RadzenDataGridColumn TItem="ProgramTarget" Property="TargetYear" Title="Year" Width="90px" TextAlign="TextAlign.Center" />
                    <RadzenDataGridColumn TItem="ProgramAssignee" Title="District" Width="90px" TextAlign="TextAlign.Center" />
                    <RadzenDataGridColumn TItem="ProgramTarget" Property="StartDate" Title="Start Date" Width="200px" TextAlign="TextAlign.Center"/>
                    <RadzenDataGridColumn TItem="ProgramTarget" Property="Title" Title="Title" Width="140px" TextAlign="TextAlign.Center"/>
                    <RadzenDataGridColumn TItem="ProgramTarget" Property="Description" Title="Description" Width="140px" TextAlign="TextAlign.Center"/>
                    <RadzenDataGridColumn TItem="ProgramTarget" Title="Status" Width="220px" TextAlign="TextAlign.Center">
                        <Template Context="programTargetsList">
                            @if (programTargetsList.IsRecommended == 2) 
                            {
                                recommendStatus = "Recommended";
                            }
                            else if (programTargetsList.IsRecommended == 1)
                            {
                                recommendStatus = "Sent to Recommendation";
                            }
                            else if (programTargetsList.IsRecommended == 3)
                            {
                                recommendStatus = "Rejected..Please Update Target before resending";
                            }
                            else 
                            {
                                recommendStatus = "Update is enabled";
                            }
                            @recommendStatus
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="ProgramTarget" Title="Action" Width="220px" TextAlign="TextAlign.Center">
                        <Template Context="programTargetsList">
                            @if (programTargetsList.IsRecommended == 2 || programTargetsList.IsRecommended == 1)
                            {
                                <RadzenButton Shade="Shade.Light" ButtonStyle="ButtonStyle.Primary" Text="Update" Size="ButtonSize.Medium" Style="width:80px;"
                                MouseEnter="@(args => ShowTooltip(args) )" Disabled/>
                            }
                            else
                            {
                                <RadzenButton Shade="Shade.Light" ButtonStyle="ButtonStyle.Primary" Text="Update" Size="ButtonSize.Medium" Click="() => navigateToUpdate(programTargetsList.ProgramTargetId)" @onclick:stopPropagation="true" Style="width:80px;" > </RadzenButton>
                            }
                            <RadzenButton Shade="Shade.Light" ButtonStyle="ButtonStyle.Success" Text="View" Size="ButtonSize.Medium" Click="() => navigateToView(programTargetsList.ProgramTargetId)" @onclick:stopPropagation="true" Style="width:80px;" MouseEnter="@(args => ShowTooltip(args) )"> </RadzenButton>
                        </Template>
                    </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
        }
        else
        {
            <RadzenDataGrid TItem="ProgramTarget" Data="@programTargetsList">
                <EmptyTemplate>
                    <p style="color: lightgrey; font-size: 24px; text-align: center; margin: 2rem;">No records to display.</p>
                </EmptyTemplate>
                <Columns>
                    <RadzenDataGridColumn TItem="ProgramTarget" Property="ProgramTargetId" Title="ID" Width="100px" TextAlign="TextAlign.Center" />
                    <RadzenDataGridColumn TItem="ProgramTarget" Property="TargetYear" Title="Year" Width="120px" />
                    <RadzenDataGridColumn TItem="ProgramTarget" Property="TargetMonth" Title="Target Month" Width="120px" />
                    <RadzenDataGridColumn TItem="ProgramTarget" Property="StartDate" Title="Start Date" Width="170px" />
                    <RadzenDataGridColumn TItem="ProgramTarget" Property="Description" Title="Description" Width="170px" />
                    <RadzenDataGridColumn TItem="ProgramTarget" Property="Title" Title="Title" Width="170px" />
                </Columns>
            </RadzenDataGrid>

        }
    </RadzenCard>

</div>

@code {

    //--------- tooltip ----------//

    void ShowTooltip(ElementReference elementReference, TooltipOptions options = null) => tooltipService.Open(elementReference, "This Target is already Recommended", options);


    private bool update;
    private bool view;
    string [] year = { "2022", "2023" , "2024"};
    string [] arrTargetType = { "Common", "Specific" };


    private int selectedDistrict;
    private int selectedDSDivision;
    private int selectedProgramID;
    private string selectedProgram;
    private int selectedDesignation;
    private string selectedOfficer;
    private int month;
    private string selectedYear;
    private string recommendStatus;
    private bool isClicked = false;
    private bool accept = false;
    private bool reject = false;

    List<ProgramTarget> programTargetsList = new List<ProgramTarget>();
    private List<ProgramAssignee> asignee = new List<ProgramAssignee>();
    List<Month> monthTable = new List<Month>();
    List<DepartmentUnit> listDistrict = new List<DepartmentUnit>();
    List<DepartmentUnit> listDSDivision = new List<DepartmentUnit>();
    List<Designation> listDesignation = new List<Designation>();
    List<ProgramType> listProgramType = new List<ProgramType>();
    List<ProgramTarget> list1 = new List<ProgramTarget>();
    List<ProgramTarget> list2 = new List<ProgramTarget>();
    List<ManPowerCore.Domain.Program> program = new List<ManPowerCore.Domain.Program>();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        monthTable.Add(new Month() { monthName = "January", monthNumber = 1 });
        monthTable.Add(new Month() { monthName = "February", monthNumber = 2 });
        monthTable.Add(new Month() { monthName = "March", monthNumber = 3 });
        monthTable.Add(new Month() { monthName = "April", monthNumber = 4 });
        monthTable.Add(new Month() { monthName = "May", monthNumber = 5 });
        monthTable.Add(new Month() { monthName = "June", monthNumber = 6 });
        monthTable.Add(new Month() { monthName = "July", monthNumber = 7 });
        monthTable.Add(new Month() { monthName = "August", monthNumber = 8 });
        monthTable.Add(new Month() { monthName = "September", monthNumber = 9 });
        monthTable.Add(new Month() { monthName = "October", monthNumber = 10 });
        monthTable.Add(new Month() { monthName = "November", monthNumber = 11 });
        monthTable.Add(new Month() { monthName = "December", monthNumber = 12 });

        DepartmentUnitTypeController _DepartmentUnitTypeController = ControllerFactory.CreateDepartmentUnitTypeController();
        listDistrict = _DepartmentUnitTypeController.GetDepartmentUnitType(2, true)._DepartmentUnit;
        listDSDivision = _DepartmentUnitTypeController.GetDepartmentUnitType(3, true)._DepartmentUnit;

        DesignationController designationController = ControllerFactory.CreateDesignationController();
        listDesignation = designationController.GetAllDesignation(true, false);

        ProgramController programController = ControllerFactory.CreateProgramController();
        program = programController.GetAllProgram(false);

        ProgramAssigneeController programAssigneeController = ControllerFactory.CreateProgramAssigneeController();
        asignee = programAssigneeController.GetAllProgramAssignee(true, true, true);

        //ProgramTargetController programTargetController = ControllerFactory.CreateProgramTargetController();
        //programTargetsList = programTargetController.GetAllProgramTarget(false, false, false, false);

    }

    async Task navigateToView(int ProgramTargetId)
    {
        NavigationManager.NavigateTo($"/planning/annualTargets/viewTarget/{ProgramTargetId}");
    }

    async Task navigateToUpdate(int ProgramTargetId)
    {
        NavigationManager.NavigateTo($"/planning/annualTargets/updateTarget/{ProgramTargetId}");
    }

    private async void onClick_Search(int year, int month)
    {
        if (selectedYear == string.Empty || selectedYear == null || month == 0)
        { 
            await JSRuntime.InvokeAsync<object>("ErrorAlert", "error", "", "Please fill all fields need to Search");
        }
        else
        {
            ProgramTargetController programTargetController = ControllerFactory.CreateProgramTargetController();
            ProgramAssigneeController programAsigneeController = ControllerFactory.CreateProgramAssigneeController();
            programTargetsList = programTargetController.GetAllProgramTarget(int.Parse(selectedYear), month, true, true, true, true);
        }
    }


}

@*<table class="table primary-table">
    <thead class="table-active">
        <tr>
            <th scope="col" style="width:60px;align-items:center;"></th>
            <th scope="col" style="width:100px;">Year</th>
            <th scope="col" style="width:100px;">Month</th>
            <th scope="col" style="width:100px;">Title</th>
            <th scope="col" style="width:200px;">Physical Count</th>
            <th scope="col" style="width:150px;">Estimated Amounts</th>
            <th scope="col" style="width:200px;">Output</th>
            <th scope="col" style="width:100px;">Outcome</th>
            <th scope="col" style="width:100px;">Action</th>
        </tr>
    </thead>
    @foreach (var item in programTargetsList)
    {
        <tbody>
            <tr @key="@item">
                <th scope="row">
                    <label class="my-radio">
                        <input type="radio" id="@item.IsRecommended" name="">
                    </label>
                </th>
                <td>@item.TargetYear</td>
                @foreach (var i in monthTable.Where(u => u.monthNumber == item.TargetMonth))
                {
                    <td>@i.monthName</td>
                }
                <td>@item.Title</td>
                <td>@item.NoOfProjects</td>
                <td>@item.EstimatedAmount</td>
                <td>@item.Output</td>
                <td>@item.Outcome</td>
                <td>
                    @*<input type="button" class="primary-btn table-button" value="Update" @onclick="() => update = !update" />
                @if (update)
                {
                <_UpdateTarget Target="item" id="@item.ProgramId"></_UpdateTarget>
                }

                    <a href="@($"/planning/annualTargets/updateTarget/{item.ProgramTargetId}")">
                        <input type="button" class="primary-btn table-button" value="Update" />
                    </a>
                    <br />
                    <a href="@($"/planning/annualTargets/viewTarget/{item.ProgramTargetId}")">
                        <input type="button" class="primary-btn table-button" value="View" />
                    </a>
                </td>
            </tr>
        </tbody>
    }
</table>*@


@*div class="row">
    <div class="col-5" style="margin-right:100px;">
        <RadzenDropDown AllowClear="true" TValue="string" Class="w-100" Placeholder="Year.." Data="@year" Name="year"
                        SelectedItem="selectedYear" @bind-Value="selectedYear" Style="margin-bottom:10px;"></RadzenDropDown>
    </div>

    <div class="col-5">

        <RadzenDropDown AllowClear="true" TValue="string" Class="w-100" Placeholder="DS Devision.." Data="@dsDevision"
                        SelectedItem="selectedDSDivision" @bind-Value="selectedDSDivision" Style="margin-bottom:10px;" />
    </div>
</div>

<div class="row">
    <div class="col-5" style="margin-right:100px;">
        <RadzenDropDown AllowClear="true" TValue="string" Class="w-100" Placeholder="District.."
                        Data="@district" @bind-Value="selectedDistrict" Style="margin-bottom:10px;"></RadzenDropDown>
    </div>

    <div class="col-5">

        <RadzenDropDown AllowClear="true" TValue="string" Class="w-100" Placeholder="Designation.." Data="@designation"
                        SelectedItem="selectedDesignatin" @bind-Value="selectedDesignatin" Style="margin-bottom:10px;" />
    </div>
</div>

<div class="row">
    <div class="col-5" style="margin-right:100px;">
        <RadzenDropDown AllowClear="true" TValue="string" Class="w-100" Data="@officerName"
                        SelectedItem="selectedOfficerName" @bind-Value="selectedOfficerName" Placeholder="Officer Name.." /><br />
    </div>
</div>
<br />
*@










@page "/dme22Approval"
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService LocalStore
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject IJSRuntime JSRuntime

<div id="main">
    <RadzenCard Style="padding-left:45px;">
        <div class="wizard-heading">DME 22 Approval</div>

        <div class="row">
            <div class="col-6">
                <div class="row">
                    <div class="col-2">
                        <RadzenLabel Text="Year" />
                    </div>
                    <div class="col-7">
                        <RadzenDropDown AllowClear="true" TValue="string" Class="w-100" Placeholder="" Data="@year" Name="year"
                                        @bind-Value="selectedYear" Style="margin-bottom:10px;font-size:0.9em;" /><br />
                        <RadzenRequiredValidator Component="year" Text="Year is required" Style="position: absolute" />
                    </div>
                </div>
                <br />
            </div>
            <div class="col-6">
                <div class="row">
                    <div class="col-2">
                        <RadzenLabel Text="Month" />
                    </div>
                    <div class="col-7">
                        <RadzenDropDown AllowClear="true" TValue="int" Class="w-100" Placeholder="" Data="@monthTable" Name="Month"
                                        ValueProperty="monthNumber" TextProperty="monthName" @bind-Value="selectedMonth" Style="margin-bottom:10px;font-size:0.9em;" />
                        <RadzenRequiredValidator Component="Month" Text="Month is required" Style="position: absolute" />
                    </div>
                </div>
                <br />
            </div>
        </div>

        @*----------------------------- table ------------------------------------*@

        @if (myList.Where(u => u.StatusId == 4).Count() != 0)
        {
                    <RadzenDataGrid Style="width: 900px" AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                        Data="@myList.Where(u => u.StatusId == 4)" TItem="TaskAllocation" ColumnWidth="400px" LogicalFilterOperator="LogicalFilterOperator.Or">
                    <Columns>
                            <RadzenDataGridColumn TItem="TaskAllocation" Property="TaskYearMonth.Year" Title="Year" Width="200px" TextAlign="TextAlign.Center" />
                            <RadzenDataGridColumn TItem="TaskAllocation" Property="CreatedUser" Title="User Name" Width="200px" TextAlign="TextAlign.Center" />
                            <RadzenDataGridColumn TItem="TaskAllocation" Title="Month" Width="200px" TextAlign="TextAlign.Center" >
                            <Template Context="myList">
                            @foreach (var i in monthTable.Where(u => u.monthNumber == myList.TaskYearMonth.Month))
                            {
                                monthName = i.monthName;
                            }
                            @monthName
                                    </Template>
                                </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="TaskAllocation" Title="Status" Width="200px" TextAlign="TextAlign.Center">
                            <Template Context="myList">
                            @foreach (var i in pStatus.Where(u => u.ProjectStatusId == myList.StatusId))
                            {
                                statusName = i.ProjectStatusName;
                            }
                            @statusName
                                </Template>
                            </RadzenDataGridColumn>                    
                            <RadzenDataGridColumn TItem="TaskAllocation" Title="Action" Width="220px" TextAlign="TextAlign.Center">
                            <Template Context="myList">
                                <RadzenButton Shade="Shade.Lighter" ButtonStyle="ButtonStyle.Success" Text="View" Size="ButtonSize.Medium" Click="() => navigateToView(myList.TaskAllocationId)" @onclick:stopPropagation="true" Style="width:80px;"> </RadzenButton>
                                </Template>
                            </RadzenDataGridColumn>
                        </Columns>
                    </RadzenDataGrid>
        }

        else if (selectedMonth != 0)
        {
                    <RadzenDataGrid Style="width: 900px" AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                        Data="@myList.Where(u => u.StatusId == 4 && u.TaskYearMonth.Month == selectedMonth)" TItem="TaskAllocation" ColumnWidth="400px" LogicalFilterOperator="LogicalFilterOperator.Or">
                        <Columns>
                            <RadzenDataGridColumn TItem="TaskAllocation" Property="TaskYearMonth.Year" Title="Year" Width="200px" TextAlign="TextAlign.Center" />
                            <RadzenDataGridColumn TItem="TaskAllocation" Property="CreatedUser" Title="User Name" Width="200px" TextAlign="TextAlign.Center" />
                            <RadzenDataGridColumn TItem="TaskAllocation" Title="Month" Width="200px" TextAlign="TextAlign.Center">
                            <Template Context="myList">
                            @foreach (var i in monthTable.Where(u => u.monthNumber == myList.TaskYearMonth.Month))
                            {
                                monthName = i.monthName;
                            }
                            @monthName
                                </Template>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="TaskAllocation" Title="Status" Width="200px" TextAlign="TextAlign.Center">
                            <Template Context="myList">
                            @foreach (var i in pStatus.Where(u => u.ProjectStatusId == myList.StatusId))
                            {
                                statusName = i.ProjectStatusName;
                            }
                            @statusName
                                </Template>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="TaskAllocation" Title="Action" Width="220px" TextAlign="TextAlign.Center">
                            <Template Context="myList">
                                <RadzenButton Shade="Shade.Lighter" ButtonStyle="ButtonStyle.Success" Text="View" Size="ButtonSize.Medium" Click="() => navigateToView(myList.TaskAllocationId)" @onclick:stopPropagation="true" Style="width:80px;"> </RadzenButton>
                                </Template>
                            </RadzenDataGridColumn>
                        </Columns>
                    </RadzenDataGrid>
        }

        else if (!String.IsNullOrWhiteSpace(selectedYear))
        {
                    <RadzenDataGrid Style="width: 900px" AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                        Data="@myList.Where(u => u.TaskYearMonth.Year == int.Parse(selectedYear))" TItem="TaskAllocation" ColumnWidth="400px" LogicalFilterOperator="LogicalFilterOperator.Or">
                        <Columns>
                            <RadzenDataGridColumn TItem="TaskAllocation" Property="TaskYearMonth.Year" Title="Year" Width="200px" TextAlign="TextAlign.Center" />
                            <RadzenDataGridColumn TItem="TaskAllocation" Property="CreatedUser" Title="User Name" Width="200px" TextAlign="TextAlign.Center" />
                            <RadzenDataGridColumn TItem="TaskAllocation" Title="Month" Width="200px" TextAlign="TextAlign.Center">
                            <Template Context="myList">
                            @foreach (var i in monthTable.Where(u => u.monthNumber == myList.TaskYearMonth.Month))
                            {
                                monthName = i.monthName;
                            }
                            @monthName
                                </Template>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="TaskAllocation" Title="Status" Width="200px" TextAlign="TextAlign.Center">
                            <Template Context="myList">
                            @foreach (var i in pStatus.Where(u => u.ProjectStatusId == myList.StatusId))
                            {
                                statusName = i.ProjectStatusName;
                            }
                            @statusName
                                </Template>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="TaskAllocation" Title="Action" Width="220px" TextAlign="TextAlign.Center">
                                <Template Context="taskAllocation">
                                    <RadzenButton Shade="Shade.Lighter" ButtonStyle="ButtonStyle.Success" Text="View" Size="ButtonSize.Medium" Click="() => navigateToView(taskAllocation.TaskAllocationId)" @onclick:stopPropagation="true" Style="width:80px;"> </RadzenButton>
                                </Template>
                            </RadzenDataGridColumn>
                        </Columns>
                    </RadzenDataGrid>
        }
        else
        {
                    <RadzenDataGrid TItem="DME21Model" Data="@dme">
                        <EmptyTemplate>
                        <p style="color: lightgrey; font-size: 24px; text-align: center; margin: 2rem;">No records to display.</p>
                    </EmptyTemplate>
                    <Columns>
                        <RadzenDataGridColumn TItem="DME21Model" Property="" Title="ID" Width="50px" TextAlign="TextAlign.Center" />
                        <RadzenDataGridColumn TItem="DME21Model" Property="FirstName" Title="User Name" />
                        <RadzenDataGridColumn TItem="DME21Model" Property="LastName" Title="Month" />
                        <RadzenDataGridColumn TItem="DME21Model" Property="Title" Title="Status" />
                        <RadzenDataGridColumn TItem="DME21Model" Property="BirthDate" Title="Action" FormatString="{0:d}" />
                    </Columns>
                </RadzenDataGrid>
        }

    </RadzenCard>
</div>

@code {
    string[] form = { "DME 21", "DME 22" };
    string[] year = { "2021", "2022" };

    private int status;
    private List<DME21Model> dme = new List<DME21Model>();
    private bool isClicked = false;
    private int count;
    private string statusName;
    private string monthName;

    private string selectedForm;
    private string selectedYear;
    private int selectedMonth;
    private int selectedStatus;

    List<TaskType> taskTypes = new List<TaskType>();
    List<ProjectStatus> pStatus = new List<ProjectStatus>();
    List<TaskAllocationDetail> taskAllocationDetails = new List<TaskAllocationDetail>();
    TaskAllocationDetail single = new TaskAllocationDetail();
    TaskAllocationDetail task = new TaskAllocationDetail();
    List<TaskAllocation> taskAllocations = new List<TaskAllocation>();
    List<TaskAllocation> myList = new List<TaskAllocation>();
    List<Month> monthTable = new List<Month>();
    public SystemUser userRegistationDetailsList;


    protected override void OnInitialized()
    {
        base.OnInitialized();

        monthTable.Add(new Month() { monthName = "January", monthNumber = 1 });
        monthTable.Add(new Month() { monthName = "February", monthNumber = 2 });
        monthTable.Add(new Month() { monthName = "March", monthNumber = 3 });
        monthTable.Add(new Month() { monthName = "April", monthNumber = 4 });
        monthTable.Add(new Month() { monthName = "May", monthNumber = 5 });
        monthTable.Add(new Month() { monthName = "June", monthNumber = 6 });
        monthTable.Add(new Month() { monthName = "July", monthNumber = 7 });
        monthTable.Add(new Month() { monthName = "August", monthNumber = 8 });
        monthTable.Add(new Month() { monthName = "September", monthNumber = 9 });
        monthTable.Add(new Month() { monthName = "October", monthNumber = 10 });
        monthTable.Add(new Month() { monthName = "November", monthNumber = 11 });
        monthTable.Add(new Month() { monthName = "December", monthNumber = 12 });


        ProjectStatusController projectStatus = ControllerFactory.CreateProjectStatusController();
        pStatus = projectStatus.GetAllProjectStatus(false);

        TaskTypeController taskTypeController = ControllerFactory.CreateTaskTypeController();
        taskTypes = taskTypeController.GetAllTaskType(false);

        TaskAllocationDetailController aa = ControllerFactory.CreateTaskAllocationDetailController();
        taskAllocationDetails = aa.GetAllTaskAllocationDetail(false, false, false);

        TaskAllocationController taskAllocationList = ControllerFactory.CreateTaskAllocationController();
        taskAllocations = taskAllocationList.GetAllTaskAllocation(true, false, true, true);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            userRegistationDetailsList = await sessionStorage.GetItemAsync<SystemUser>("UserDetails");
            foreach (var i in taskAllocations.Where(u => u.ApprovedBy == userRegistationDetailsList.Name && u.StatusId == 4))
            {
                myList.Add(i);
            }

            StateHasChanged();
        }
    }

    async Task navigateToView(int index)
    {
        NavigationManager.NavigateTo($"/approvalView/{index}");
    }
}


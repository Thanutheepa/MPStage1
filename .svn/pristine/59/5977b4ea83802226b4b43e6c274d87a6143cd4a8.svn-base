// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace ManPowerWeb.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Melstasoft\Desktop\New folder\ManPowerWeb\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Melstasoft\Desktop\New folder\ManPowerWeb\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Melstasoft\Desktop\New folder\ManPowerWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Melstasoft\Desktop\New folder\ManPowerWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Melstasoft\Desktop\New folder\ManPowerWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Melstasoft\Desktop\New folder\ManPowerWeb\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Melstasoft\Desktop\New folder\ManPowerWeb\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Melstasoft\Desktop\New folder\ManPowerWeb\_Imports.razor"
using ManPowerWeb;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Melstasoft\Desktop\New folder\ManPowerWeb\_Imports.razor"
using ManPowerWeb.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Melstasoft\Desktop\New folder\ManPowerWeb\_Imports.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Melstasoft\Desktop\New folder\ManPowerWeb\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Melstasoft\Desktop\New folder\ManPowerWeb\_Imports.razor"
using CurrieTechnologies.Razor.SweetAlert2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Melstasoft\Desktop\New folder\ManPowerWeb\Pages\AddNewTarget.razor"
using System.Text.RegularExpressions;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/planning/1/addnewtarget")]
    public partial class AddNewTarget : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 134 "C:\Users\Melstasoft\Desktop\New folder\ManPowerWeb\Pages\AddNewTarget.razor"
      

    string[] year = { "2019", "2020", "2021", "2022" };
    string[] district = { "Gampaha", "Kaluthara", "Galle", "Colombo" };
    string[] dsDevision = { "DS Division 01", "DS Division 02", "DS Division 03", "DS Division 04" };
    string[] designation = { "Executive", "Secretary" };
    string[] officerName = { "Mr. R Fernando", "Mrs. A Abhesinghe", "Mr. S T Perera" };
    string[] targetType = { "Common", "Specific"};
    string[] prgramIntr = { "Gampaha", "Kaluthara", "Galle", "Colombo" };


    private string selectedOfficerName;
    private string selectedYear;
    private string selectedDSDivision;
    private string selectedDistrict;
    private string selectedDesignatin;

    private string targetCategory;
    private string program;
    private string pInstruct;
    private string vote;
    private string qtr;
    private string phyCount;
    private string finCount;
    private string output;
    private string outcome;


    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    private async void onClick_save()
    {
        if (selectedOfficerName == string.Empty || selectedOfficerName == null ||
            selectedDSDivision == string.Empty || selectedDSDivision == null ||
            selectedDistrict == string.Empty || selectedDistrict == null ||
            selectedDesignatin == string.Empty || selectedDesignatin == null ||
            selectedYear == string.Empty || selectedYear == null ||
            targetCategory == string.Empty || targetCategory == null ||
            program == string.Empty || program == null ||
            pInstruct == string.Empty || pInstruct == null ||
            vote == string.Empty || vote == null ||
            qtr == string.Empty || qtr == null ||
            phyCount == string.Empty || phyCount == null ||
            finCount == string.Empty || finCount == null ||
            output == string.Empty || output == null ||
            outcome == string.Empty || outcome == null)
        {
            await JS.InvokeAsync<object>("ErrorAlert", "error", "", "Please fill all the required data");
        }
        else
        {
            await JS.InvokeAsync<object>("ErrorAlert", "success", "", "validate success");
        }
    }

    private async void onClick_add()
    {
        if (qtr == string.Empty || qtr == null ||
            phyCount == string.Empty || phyCount == null ||
            finCount == string.Empty || finCount == null)
        {
            await JS.InvokeAsync<object>("ErrorAlert", "error", "", "Please fill all the required data");
        }
        else if (CountValidate(phyCount, finCount) == false)
        {
            await JS.InvokeAsync<object>("ErrorAlert", "error", "", "Please add valid counts for 'Physical and Financial Counts'..");
        }
        else
        {
            await JS.InvokeAsync<object>("ErrorAlert", "success", "", "successfully added");
        }
    }



    private bool CountValidate(string phyCount, string finCount)
    {
        Regex count= new Regex("[0-9]");
        if(count.IsMatch(phyCount) && count.IsMatch(finCount))
        {
            return true;
        }
        else {
            return false;
        }
    }

    private void onClick_clear()
    {
        selectedOfficerName = "";
        selectedYear = "";
        selectedDSDivision = "";
        selectedDistrict = "";
        selectedDesignatin = "";
        targetCategory = "";
        program = "";
        pInstruct = "";
        vote = "";
        qtr = "";
        phyCount = "";
        finCount = "";
        output = "";
        outcome = "";
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JS { get; set; }
    }
}
#pragma warning restore 1591

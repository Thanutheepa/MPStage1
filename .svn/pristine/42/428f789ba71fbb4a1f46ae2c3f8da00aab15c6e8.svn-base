using ManPowerCore.Common;
using ManPowerCore.Domain;
using ManPowerCore.Infrastructure;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ManPowerCore.Controller
{
    internal interface ProgramTargetController
    {

        int SaveProgramTarget(ProgramTarget programTarget);

        int UpdateProgramTarget(ProgramTarget programAssignee);

        List<ProgramTarget> GetAllProgramTarget();

        ProgramTarget GetProgramTarget(int id);
    }

    public class ProgramTargetControllerImpl : ProgramTargetController
    {

        DBConnection dBConnection;
        ProgramTargetDAO programTargetDAO = DAOFactory.CreateProgramTargetDAO();

        public int SaveProgramTarget(ProgramTarget programTarget)
        {

            try
            {
                dBConnection = new DBConnection();
                return programTargetDAO.SaveProgramTarget(programTarget, dBConnection);
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }

        public int UpdateProgramTarget(ProgramTarget programTarget)
        {


            try
            {
                dBConnection = new DBConnection();
                var programTargets = programTargetDAO.UpdateProgramTarget(programTarget, dBConnection);
                return programTargets;
            }
            catch (Exception)
            {
                dBConnection.RollBack();

                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }
        }


        public List<ProgramTarget> GetAllProgramTarget()
        {
            try
            {
                dBConnection = new DBConnection();
                List<ProgramTarget> list = programTargetDAO.GetAllProgramTarget(dBConnection);
                return list;

            }
            catch (Exception)
            {
                dBConnection.RollBack();
                throw;
            }
            finally
            {
                if (dBConnection.con.State == System.Data.ConnectionState.Open)
                    dBConnection.Commit();
            }

        }

        public ProgramTarget GetProgramTarget(int id)
        {
            DBConnection dbConnection = new DBConnection();
            try
            {
                ProgramTargetDAO DAO = DAOFactory.CreateProgramTargetDAO();
                return DAO.GetProgramTarget(id, dbConnection);
            }
            catch (Exception ex)
            {
                dbConnection.RollBack();
                throw;
            }
            finally
            {
                if (dbConnection.con.State == System.Data.ConnectionState.Open)
                    dbConnection.Commit();
            }
        }
    }
}
